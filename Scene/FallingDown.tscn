[gd_scene load_steps=11 format=2]

[ext_resource path="res://Images/Characters/Tics.png" type="Texture" id=1]
[ext_resource path="res://Images/Tilemap/MineTilmap.png" type="Texture" id=2]
[ext_resource path="res://Images/Effect/LightBeamStraight.png" type="Texture" id=3]
[ext_resource path="res://Script/SceneScript/FallingDownScript.gd" type="Script" id=4]

[sub_resource type="TileSet" id=1]
0/name = "MineTilmap.png 0"
0/texture = ExtResource( 2 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 8, 0, 8, 8 )
0/tile_mode = 0
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shape_offset = Vector2( 0, 0 )
0/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
0/shape_one_way = false
0/shape_one_way_margin = 0.0
0/shapes = [  ]
0/z_index = 0

[sub_resource type="Animation" id=2]
resource_name = "Fall"
length = 7.6
tracks/0/type = "value"
tracks/0/path = NodePath("TileMap:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 954 ), Vector2( 0, -1841 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Tics:position")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 2.1, 3, 5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 356, -46 ), Vector2( 356, 377 ), Vector2( 356, 377 ), Vector2( 356, 742 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("ColorRect2:color")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 4.4, 5.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ), Color( 0, 0, 0, 1 ) ]
}
tracks/3/type = "method"
tracks/3/path = NodePath(".")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 5.4 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "thump"
} ]
}

[sub_resource type="Animation" id=3]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("TileMap:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 0, 954 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Tics:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 356, -46 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("ColorRect2:color")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ) ]
}

[sub_resource type="Gradient" id=35]
offsets = PoolRealArray( 0.00310559, 1 )
colors = PoolColorArray( 1, 1, 1, 0.278431, 1, 1, 1, 0 )

[sub_resource type="Shader" id=33]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/VHS-and-CRT-monitor-effect

This shader is under CC0 license. Feel free to use, improve and 
change this shader according to your needs and consider sharing 
the modified result to godotshaders.com.
*/

shader_type canvas_item;

//*** IMPORTANT! ***/ 
// - If you are using this shader to affect the node it is applied to set 'overlay' to false (unchecked in the instepctor).
// - If you are using this shader as an overlay, and want the shader to affect the nodes below in the Scene hierarchy,
//   set 'overlay' to true (checked in the inspector).
// On Mac there is potentially a bug causing this to not work properly. If that is the case and you want to use the shader as an overlay
// change all \"overlay ? SCREEN_TEXTURE : TEXTURE\" to only \"SCREEN_TEXTURE\" on lines 129-140, and \"vec2 uv = overlay ? warp(SCREEN_UV) : warp(UV);\"
// to \"vec2 uv = warp(SCREEN_UV);\" on line 98.
uniform bool overlay = false;

uniform float scanlines_opacity : hint_range(0.0, 1.0) = 0.4;
uniform float scanlines_width : hint_range(0.0, 0.5) = 0.25;
uniform float grille_opacity : hint_range(0.0, 1.0) = 0.3;
uniform vec2 resolution = vec2(640.0, 480.0); // Set the number of rows and columns the texture will be divided in. Scanlines and grille will make a square based on these values

uniform bool pixelate = true; // Fill each square (\"pixel\") with a sampled color, creating a pixel look and a more accurate representation of how a CRT monitor would work.

uniform bool roll = true;
uniform float roll_speed = 8.0; // Positive values are down, negative are up
uniform float roll_size : hint_range(0.0, 100.0) = 15.0;
uniform float roll_variation : hint_range(0.1, 5.0) = 1.8; // This valie is not an exact science. You have to play around with the value to find a look you like. How this works is explained in the code below.
uniform float distort_intensity : hint_range(0.0, 0.2) = 0.05; // The distortion created by the rolling effect.

uniform float noise_opacity : hint_range(0.0, 1.0) = 0.4;
uniform float noise_speed = 5.0; // There is a movement in the noise pattern that can be hard to see first. This sets the speed of that movement.

uniform float static_noise_intensity : hint_range(0.0, 1.0) = 0.06;

uniform float aberration : hint_range(-1.0, 1.0) = 0.03; // Chromatic aberration, a distortion on each color channel.
uniform float brightness = 1.4; // When adding scanline gaps and grille the image can get very dark. Brightness tries to compensate for that.
uniform bool discolor = true; // Add a discolor effect simulating a VHS

uniform float warp_amount :hint_range(0.0, 5.0) = 1.0; // Warp the texture edges simulating the curved glass of a CRT monitor or old TV.
uniform bool clip_warp = false;

uniform float vignette_intensity = 0.4; // Size of the vignette, how far towards the middle it should go.
uniform float vignette_opacity : hint_range(0.0, 1.0) = 0.5;

// Used by the noise functin to generate a pseudo random value between 0.0 and 1.0
vec2 random(vec2 uv){
    uv = vec2( dot(uv, vec2(127.1,311.7) ),
               dot(uv, vec2(269.5,183.3) ) );
    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);
}

// Generate a Perlin noise used by the distortion effects
float noise(vec2 uv) {
    vec2 uv_index = floor(uv);
    vec2 uv_fract = fract(uv);

    vec2 blur = smoothstep(0.0, 1.0, uv_fract);

    return mix( mix( dot( random(uv_index + vec2(0.0,0.0) ), uv_fract - vec2(0.0,0.0) ),
                     dot( random(uv_index + vec2(1.0,0.0) ), uv_fract - vec2(1.0,0.0) ), blur.x),
                mix( dot( random(uv_index + vec2(0.0,1.0) ), uv_fract - vec2(0.0,1.0) ),
                     dot( random(uv_index + vec2(1.0,1.0) ), uv_fract - vec2(1.0,1.0) ), blur.x), blur.y) * 0.5 + 0.5;
}

// Takes in the UV and warps the edges, creating the spherized effect
vec2 warp(vec2 uv){
	vec2 delta = uv - 0.5;
	float delta2 = dot(delta.xy, delta.xy);
	float delta4 = delta2 * delta2;
	float delta_offset = delta4 * warp_amount;
	
	return uv + delta * delta_offset;
}

// Adds a black border to hide stretched pixel created by the warp effect
float border (vec2 uv){
	float radius = min(warp_amount, 0.08);
	radius = max(min(min(abs(radius * 2.0), abs(1.0)), abs(1.0)), 1e-5);
	vec2 abs_uv = abs(uv * 2.0 - 1.0) - vec2(1.0, 1.0) + radius;
	float dist = length(max(vec2(0.0), abs_uv)) / radius;
	float square = smoothstep(0.96, 1.0, dist);
	return clamp(1.0 - square, 0.0, 1.0);
}

// Adds a vignette shadow to the edges of the image
float vignette(vec2 uv){
	uv *= 1.0 - uv.xy;
	float vignette = uv.x * uv.y * 15.0;
	return pow(vignette, vignette_intensity * vignette_opacity);
}

void fragment()
{
	vec2 uv = overlay ? warp(SCREEN_UV) : warp(UV); // Warp the uv. uv will be used in most cases instead of UV to keep the warping
	vec2 text_uv = uv;
	vec2 roll_uv = vec2(0.0);
	float time = roll ? TIME : 0.0;
	

	// Pixelate the texture based on the given resolution.
	if (pixelate)
	{
		text_uv = ceil(uv * resolution) / resolution;
	}
	
	// Create the rolling effect. We need roll_line a bit later to make the noise effect.
	// That is why this runs if roll is true OR noise_opacity is over 0.
	float roll_line = 0.0;
	if (roll || noise_opacity > 0.0)
	{
		// Create the areas/lines where the texture will be distorted.
		roll_line = smoothstep(0.3, 0.9, sin(uv.y * roll_size - (time * roll_speed) ) );
		// Create more lines of a different size and apply to the first set of lines. This creates a bit of variation.
		roll_line *= roll_line * smoothstep(0.3, 0.9, sin(uv.y * roll_size * roll_variation - (time * roll_speed * roll_variation) ) );
		// Distort the UV where where the lines are
		roll_uv = vec2(( roll_line * distort_intensity * (1.-UV.x)), 0.0);
	}
	
	vec4 text;
	if (roll)
	{
		// If roll is true distort the texture with roll_uv. The texture is split up into RGB to 
		// make some chromatic aberration. We apply the aberration to the red and green channels accorging to the aberration parameter
		// and intensify it a bit in the roll distortion.
		text.r = texture(SCREEN_TEXTURE, text_uv + roll_uv * 0.8 + vec2(aberration, 0.0) * .1).r;
		text.g = texture(SCREEN_TEXTURE, text_uv + roll_uv * 1.2 - vec2(aberration, 0.0) * .1 ).g;
		text.b = texture(SCREEN_TEXTURE, text_uv + roll_uv).b;
		text.a = 1.0;
	}
	else
	{
		// If roll is false only apply the aberration without any distorion. The aberration values are very small so the .1 is only 
		// to make the slider in the Inspector less sensitive.
		text.r = texture(SCREEN_TEXTURE, text_uv + vec2(aberration, 0.0) * .1).r;
		text.g = texture(SCREEN_TEXTURE, text_uv - vec2(aberration, 0.0) * .1).g;
		text.b = texture(SCREEN_TEXTURE, text_uv).b;
		text.a = 1.0;
	}
	
	float r = text.r;
	float g = text.g;
	float b = text.b;
	
	uv = warp(UV);
	
	// CRT monitors don't have pixels but groups of red, green and blue dots or lines, called grille. We isolate the texture's color channels 
	// and divide it up in 3 offsetted lines to show the red, green and blue colors next to each other, with a small black gap between.
	if (grille_opacity > 0.0){
		
		float g_r = smoothstep(0.85, 0.95, abs(sin(uv.x * (resolution.x * 3.14159265))));
		r = mix(r, r * g_r, grille_opacity);
		
		float g_g = smoothstep(0.85, 0.95, abs(sin(1.05 + uv.x * (resolution.x * 3.14159265))));
		g = mix(g, g * g_g, grille_opacity);
		
		float b_b = smoothstep(0.85, 0.95, abs(sin(2.1 + uv.x * (resolution.x * 3.14159265))));
		b = mix(b, b * b_b, grille_opacity);
		
	}
	
	// Apply the grille to the texture's color channels and apply Brightness. Since the grille and the scanlines (below) make the image very dark you
	// can compensate by increasing the brightness.
	text.r = clamp(r * brightness, 0.0, 1.0);
	text.g = clamp(g * brightness, 0.0, 1.0);
	text.b = clamp(b * brightness, 0.0, 1.0);
	
	// Scanlines are the horizontal lines that make up the image on a CRT monitor. 
	// Here we are actual setting the black gap between each line, which I guess is not the right definition of the word, but you get the idea  
	float scanlines = 0.5;
	if (scanlines_opacity > 0.0)
	{
		// Same technique as above, create lines with sine and applying it to the texture. Smoothstep to allow setting the line size.
		scanlines = smoothstep(scanlines_width, scanlines_width + 0.5, abs(sin(uv.y * (resolution.y * 3.14159265))));
		text.rgb = mix(text.rgb, text.rgb * vec3(scanlines), scanlines_opacity);
	}
	
	// Apply the banded noise.
	if (noise_opacity > 0.0)
	{
		// Generate a noise pattern that is very stretched horizontally, and animate it with noise_speed
		float noise = smoothstep(0.4, 0.5, noise(uv * vec2(2.0, 200.0) + vec2(10.0, (TIME * (noise_speed))) ) );
		
		// We use roll_line (set above) to define how big the noise should be vertically (multiplying cuts off all black parts).
		// We also add in some basic noise with random() to break up the noise pattern above. The noise is sized according to 
		// the resolution value set in the inspector. If you don't like this look you can 
		// change \"ceil(uv * resolution) / resolution\" to only \"uv\" to make it less pixelated. Or multiply resolution with som value
		// greater than 1.0 to make them smaller.
		roll_line *= noise * scanlines * clamp(random((ceil(uv * resolution) / resolution) + vec2(TIME * 0.8, 0.0)).x + 0.8, 0.0, 1.0);
		// Add it to the texture based on noise_opacity
		text.rgb = clamp(mix(text.rgb, text.rgb + roll_line, noise_opacity), vec3(0.0), vec3(1.0));
	}
	
	// Apply static noise by generating it over the whole screen in the same way as above
	if (static_noise_intensity > 0.0)
	{
		text.rgb += clamp(random((ceil(uv * resolution) / resolution) + fract(TIME)).x, 0.0, 1.0) * static_noise_intensity;
	}
	
	// Apply a black border to hide imperfections caused by the warping.
	// Also apply the vignette
	text.rgb *= border(uv);
	text.rgb *= vignette(uv);
	// Hides the black border and make that area transparent. Good if you want to add the the texture on top an image of a TV or monitor.
	if (clip_warp)
	{
		text.a = border(uv);
	}
	
	// Apply discoloration to get a VHS look (lower saturation and higher contrast)
	// You can play with the values below or expose them in the Inspector.
	float saturation = 0.5;
	float contrast = 1.2;
	if (discolor)
	{
		// Saturation
		vec3 greyscale = vec3(text.r + text.g + text.b) / 3.;
		text.rgb = mix(text.rgb, greyscale, saturation);
		
		// Contrast
		float midpoint = pow(0.5, 2.2);
		text.rgb = (text.rgb - vec3(midpoint)) * contrast + midpoint;
	}
	
	COLOR = text;
}"

[sub_resource type="ShaderMaterial" id=34]
shader = SubResource( 33 )
shader_param/overlay = true
shader_param/scanlines_opacity = 0.01
shader_param/scanlines_width = 0.0
shader_param/grille_opacity = 0.0
shader_param/resolution = Vector2( 5120, 5120 )
shader_param/pixelate = true
shader_param/roll = true
shader_param/roll_speed = 2.0
shader_param/roll_size = 13.0
shader_param/roll_variation = 5.0
shader_param/distort_intensity = 0.002
shader_param/noise_opacity = 0.034
shader_param/noise_speed = 5.0
shader_param/static_noise_intensity = 0.06
shader_param/aberration = 0.005
shader_param/brightness = 1.4
shader_param/discolor = false
shader_param/warp_amount = 1.0
shader_param/clip_warp = false
shader_param/vignette_intensity = 0.4
shader_param/vignette_opacity = 0.275

[node name="FallingDown" type="Node2D"]
script = ExtResource( 4 )

[node name="ColorRect" type="ColorRect" parent="."]
margin_right = 700.0
margin_bottom = 700.0
color = Color( 0.0823529, 0.0745098, 0.117647, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tics" type="Sprite" parent="."]
position = Vector2( 356, -46 )
rotation = 1.68514
scale = Vector2( 5.469, 5.469 )
texture = ExtResource( 1 )
hframes = 2
vframes = 2

[node name="TileMap" type="TileMap" parent="."]
position = Vector2( 0, 954 )
scale = Vector2( 5.469, 5.469 )
tile_set = SubResource( 1 )
cell_size = Vector2( 8, 8 )
format = 1
tile_data = PoolIntArray( -12189696, 0, 0, -12124160, 0, 0, -12058624, 0, 0, -11993088, 0, 0, -11927552, 0, 0, -11862016, 0, 0, -11796480, 0, 0, -11730944, 0, 0, -11665408, 0, 0, -11599872, 0, 0, -11534336, 0, 0, -11468800, 0, 0, -11403264, 0, 0, -11337728, 0, 0, -11272192, 0, 0, -11206656, 0, 0, -11141120, 0, 0, -11075584, 0, 0, -11010048, 0, 0, -11010033, 0, 0, -10944512, 0, 0, -10944497, 0, 0, -10878976, 0, 0, -10878961, 0, 0, -10813440, 0, 0, -10813425, 0, 0, -10747904, 0, 0, -10747889, 0, 0, -10682368, 0, 0, -10682353, 0, 0, -10616832, 0, 0, -10616817, 0, 0, -10551296, 0, 0, -10551281, 0, 0, -10485760, 0, 0, -10485745, 0, 0, -10420224, 0, 0, -10420209, 0, 0, -10354688, 0, 0, -10354673, 0, 0, -10289152, 0, 0, -10289137, 0, 0, -10223616, 0, 0, -10223601, 0, 0, -10158080, 0, 0, -10158065, 0, 0, -10092544, 0, 0, -10092529, 0, 0, -10027008, 0, 0, -10026993, 0, 0, -9961472, 0, 0, -9961457, 0, 0, -9895936, 0, 0, -9895921, 0, 0, -9830400, 0, 0, -9830385, 0, 0, -9764864, 0, 0, -9764849, 0, 0, -9699328, 0, 0, -9699313, 0, 0, -9633792, 0, 0, -9633777, 0, 0, -9568256, 0, 0, -9568241, 0, 0, -9502720, 0, 0, -9502705, 0, 0, -9437184, 0, 0, -9437169, 0, 0, -9371648, 0, 0, -9371633, 0, 0, -9306112, 0, 0, -9306097, 0, 0, -9240576, 0, 0, -9240561, 0, 0, -9175040, 0, 0, -9175025, 0, 0, -9109504, 0, 0, -9109489, 0, 0, -9043968, 0, 0, -9043953, 0, 0, -8978432, 0, 0, -8978417, 0, 0, -8912896, 0, 0, -8912881, 0, 0, -8847360, 0, 0, -8847345, 0, 0, -8781824, 0, 0, -8781809, 0, 0, -8716288, 0, 0, -8716273, 0, 0, -8650752, 0, 0, -8650737, 0, 0, -8585216, 0, 0, -8585201, 0, 0, -8519680, 0, 0, -8519665, 0, 0, -8454144, 0, 0, -8454129, 0, 0, -8388608, 0, 0, -8388593, 0, 0, -8323072, 0, 0, -8323057, 0, 0, -8257536, 0, 0, -8257521, 0, 0, -8192000, 0, 0, -8191985, 0, 0, -8191914, 0, 0, -8126464, 0, 0, -8126449, 0, 0, -8126378, 0, 0, -8126377, 0, 0, -8060928, 0, 0, -8060913, 0, 0, -8060842, 0, 0, -8060841, 0, 0, -7995392, 0, 0, -7995377, 0, 0, -7995306, 0, 0, -7995305, 0, 0, -7929856, 0, 0, -7929841, 0, 0, -7929770, 0, 0, -7929769, 0, 0, -7864320, 0, 0, -7864305, 0, 0, -7864234, 0, 0, -7864233, 0, 0, -7798784, 0, 0, -7798769, 0, 0, -7798698, 0, 0, -7798697, 0, 0, -7733248, 0, 0, -7733233, 0, 0, -7733162, 0, 0, -7733161, 0, 0, -7667712, 0, 0, -7667697, 0, 0, -7667626, 0, 0, -7667625, 0, 0, -7602176, 0, 0, -7602161, 0, 0, -7602090, 0, 0, -7602089, 0, 0, -7536640, 0, 0, -7536625, 0, 0, -7536554, 0, 0, -7536553, 0, 0, -7471104, 0, 0, -7471089, 0, 0, -7471018, 0, 0, -7471017, 0, 0, -7405568, 0, 0, -7405553, 0, 0, -7405482, 0, 0, -7405481, 0, 0, -7340032, 0, 0, -7340017, 0, 0, -7339946, 0, 0, -7339945, 0, 0, -7274496, 0, 0, -7274481, 0, 0, -7274410, 0, 0, -7274409, 0, 0, -7208960, 0, 0, -7208945, 0, 0, -7208874, 0, 0, -7208873, 0, 0, -7143424, 0, 0, -7143409, 0, 0, -7143338, 0, 0, -7143337, 0, 0, -7077888, 0, 0, -7077873, 0, 0, -7077802, 0, 0, -7077801, 0, 0, -7012352, 0, 0, -7012337, 0, 0, -7012266, 0, 0, -7012265, 0, 0, -6946816, 0, 0, -6946801, 0, 0, -6946730, 0, 0, -6946729, 0, 0, -6881280, 0, 0, -6881265, 0, 0, -6881194, 0, 0, -6881193, 0, 0, -6815744, 0, 0, -6815729, 0, 0, -6815658, 0, 0, -6815657, 0, 0, -6750208, 0, 0, -6750193, 0, 0, -6750122, 0, 0, -6750121, 0, 0, -6684672, 0, 0, -6684657, 0, 0, -6684586, 0, 0, -6684585, 0, 0, -6619136, 0, 0, -6619121, 0, 0, -6619050, 0, 0, -6619049, 0, 0, -6553600, 0, 0, -6553585, 0, 0, -6553514, 0, 0, -6553513, 0, 0, -6488064, 0, 0, -6488049, 0, 0, -6487978, 0, 0, -6487977, 0, 0, -6422528, 0, 0, -6422513, 0, 0, -6422442, 0, 0, -6422441, 0, 0, -6356992, 0, 0, -6356977, 0, 0, -6356906, 0, 0, -6356905, 0, 0, -6291456, 0, 0, -6291441, 0, 0, -6291370, 0, 0, -6291369, 0, 0, -6225920, 0, 0, -6225905, 0, 0, -6225834, 0, 0, -6225833, 0, 0, -6160384, 0, 0, -6160369, 0, 0, -6160298, 0, 0, -6160297, 0, 0, -6094848, 0, 0, -6094833, 0, 0, -6094762, 0, 0, -6094761, 0, 0, -6029312, 0, 0, -6029297, 0, 0, -6029226, 0, 0, -6029225, 0, 0, -5963776, 0, 0, -5963761, 0, 0, -5963690, 0, 0, -5963689, 0, 0, -5898240, 0, 0, -5898225, 0, 0, -5898154, 0, 0, -5898153, 0, 0, -5832704, 0, 0, -5832689, 0, 0, -5832618, 0, 0, -5832617, 0, 0, -5767168, 0, 0, -5767153, 0, 0, -5767082, 0, 0, -5767081, 0, 0, -5701632, 0, 0, -5701617, 0, 0, -5701546, 0, 0, -5701545, 0, 0, -5636096, 0, 0, -5636081, 0, 0, -5636010, 0, 0, -5636009, 0, 0, -5570560, 0, 0, -5570545, 0, 0, -5570474, 0, 0, -5570473, 0, 0, -5505024, 0, 0, -5505009, 0, 0, -5504938, 0, 0, -5504937, 0, 0, -5439488, 0, 0, -5439473, 0, 0, -5439402, 0, 0, -5439401, 0, 0, -5373952, 0, 0, -5373937, 0, 0, -5373866, 0, 0, -5373865, 0, 0, -5308416, 0, 0, -5308401, 0, 0, -5308330, 0, 0, -5308329, 0, 0, -5242880, 0, 0, -5242865, 0, 0, -5242794, 0, 0, -5242793, 0, 0, -5177344, 0, 0, -5177329, 0, 0, -5177258, 0, 0, -5177257, 0, 0, -5111808, 0, 0, -5111793, 0, 0, -5111722, 0, 0, -5111721, 0, 0, -5046272, 0, 0, -5046257, 0, 0, -5046186, 0, 0, -5046185, 0, 0, -4980736, 0, 0, -4980721, 0, 0, -4980650, 0, 0, -4980649, 0, 0, -4915200, 0, 0, -4915185, 0, 0, -4915114, 0, 0, -4915113, 0, 0, -4849664, 0, 0, -4849649, 0, 0, -4849578, 0, 0, -4849577, 0, 0, -4784128, 0, 0, -4784113, 0, 0, -4784042, 0, 0, -4784041, 0, 0, -4718592, 0, 0, -4718577, 0, 0, -4718506, 0, 0, -4718505, 0, 0, -4653056, 0, 0, -4653041, 0, 0, -4652970, 0, 0, -4652969, 0, 0, -4587520, 0, 0, -4587505, 0, 0, -4587434, 0, 0, -4587433, 0, 0, -4521984, 0, 0, -4521969, 0, 0, -4521898, 0, 0, -4521897, 0, 0, -4456448, 0, 0, -4456433, 0, 0, -4456362, 0, 0, -4456361, 0, 0, -4390912, 0, 0, -4390897, 0, 0, -4390826, 0, 0, -4390825, 0, 0, -4325376, 0, 0, -4325361, 0, 0, -4325290, 0, 0, -4325289, 0, 0, -4259840, 0, 0, -4259825, 0, 0, -4259754, 0, 0, -4259753, 0, 0, -4194304, 0, 0, -4194289, 0, 0, -4194218, 0, 0, -4194217, 0, 0, -4128768, 0, 0, -4128753, 0, 0, -4128682, 0, 0, -4128681, 0, 0, -4063232, 0, 0, -4063217, 0, 0, -4063146, 0, 0, -4063145, 0, 0, -3997696, 0, 0, -3997681, 0, 0, -3997610, 0, 0, -3997609, 0, 0, -3932160, 0, 0, -3932145, 0, 0, -3932074, 0, 0, -3932073, 0, 0, -3866624, 0, 0, -3866609, 0, 0, -3866538, 0, 0, -3866537, 0, 0, -3801088, 0, 0, -3801073, 0, 0, -3801002, 0, 0, -3801001, 0, 0, -3735552, 0, 0, -3735537, 0, 0, -3735466, 0, 0, -3735465, 0, 0, -3670016, 0, 0, -3670001, 0, 0, -3669930, 0, 0, -3669929, 0, 0, -3604480, 0, 0, -3604465, 0, 0, -3604394, 0, 0, -3604393, 0, 0, -3538944, 0, 0, -3538929, 0, 0, -3538858, 0, 0, -3538857, 0, 0, -3473408, 0, 0, -3473393, 0, 0, -3473322, 0, 0, -3473321, 0, 0, -3407872, 0, 0, -3407857, 0, 0, -3407786, 0, 0, -3407785, 0, 0, -3342336, 0, 0, -3342321, 0, 0, -3342250, 0, 0, -3342249, 0, 0, -3276800, 0, 0, -3276785, 0, 0, -3276714, 0, 0, -3276713, 0, 0, -3211264, 0, 0, -3211249, 0, 0, -3211178, 0, 0, -3211177, 0, 0, -3145728, 0, 0, -3145713, 0, 0, -3145642, 0, 0, -3145641, 0, 0, -3080192, 0, 0, -3080177, 0, 0, -3080106, 0, 0, -3080105, 0, 0, -3014656, 0, 0, -3014641, 0, 0, -3014570, 0, 0, -3014569, 0, 0, -2949120, 0, 0, -2949105, 0, 0, -2949034, 0, 0, -2949033, 0, 0, -2883584, 0, 0, -2883569, 0, 0, -2883498, 0, 0, -2883497, 0, 0, -2818048, 0, 0, -2818033, 0, 0, -2817962, 0, 0, -2817961, 0, 0, -2752512, 0, 0, -2752497, 0, 0, -2752426, 0, 0, -2752425, 0, 0, -2686976, 0, 0, -2686961, 0, 0, -2686890, 0, 0, -2686889, 0, 0, -2621440, 0, 0, -2621425, 0, 0, -2621354, 0, 0, -2621353, 0, 0, -2555904, 0, 0, -2555889, 0, 0, -2555818, 0, 0, -2555817, 0, 0, -2490368, 0, 0, -2490353, 0, 0, -2490282, 0, 0, -2490281, 0, 0, -2424832, 0, 0, -2424817, 0, 0, -2424746, 0, 0, -2424745, 0, 0, -2359296, 0, 0, -2359281, 0, 0, -2359210, 0, 0, -2359209, 0, 0, -2293760, 0, 0, -2293745, 0, 0, -2293674, 0, 0, -2293673, 0, 0, -2228224, 0, 0, -2228209, 0, 0, -2228138, 0, 0, -2228137, 0, 0, -2162688, 0, 0, -2162673, 0, 0, -2162602, 0, 0, -2162601, 0, 0, -2097152, 0, 0, -2097137, 0, 0, -2097066, 0, 0, -2097065, 0, 0, -2031616, 0, 0, -2031601, 0, 0, -2031530, 0, 0, -2031529, 0, 0, -1966080, 0, 0, -1966065, 0, 0, -1965994, 0, 0, -1965993, 0, 0, -1900544, 0, 0, -1900529, 0, 0, -1900458, 0, 0, -1900457, 0, 0, -1835008, 0, 0, -1834993, 0, 0, -1834922, 0, 0, -1834921, 0, 0, -1769472, 0, 0, -1769457, 0, 0, -1769386, 0, 0, -1769385, 0, 0, -1703936, 0, 0, -1703921, 0, 0, -1703850, 0, 0, -1703849, 0, 0, -1638400, 0, 0, -1638385, 0, 0, -1638314, 0, 0, -1638313, 0, 0, -1572864, 0, 0, -1572849, 0, 0, -1572778, 0, 0, -1572777, 0, 0, -1507328, 0, 0, -1507313, 0, 0, -1507242, 0, 0, -1507241, 0, 0, -1441792, 0, 0, -1441777, 0, 0, -1441706, 0, 0, -1441705, 0, 0, -1376256, 0, 0, -1376241, 0, 0, -1376170, 0, 0, -1376169, 0, 0, -1310720, 0, 0, -1310705, 0, 0, -1310634, 0, 0, -1310633, 0, 0, -1245184, 0, 0, -1245169, 0, 0, -1245098, 0, 0, -1245097, 0, 0, -1179648, 0, 0, -1179633, 0, 0, -1179562, 0, 0, -1179561, 0, 0, -1114112, 0, 0, -1114097, 0, 0, -1114026, 0, 0, -1114025, 0, 0, -1048576, 0, 0, -1048561, 0, 0, -1048490, 0, 0, -1048489, 0, 0, -983040, 0, 0, -983025, 0, 0, -982954, 0, 0, -982953, 0, 0, -917504, 0, 0, -917489, 0, 0, -917418, 0, 0, -917417, 0, 0, -851968, 0, 0, -851953, 0, 0, -851882, 0, 0, -851881, 0, 0, -786432, 0, 0, -786417, 0, 0, -786346, 0, 0, -786345, 0, 0, -720896, 0, 0, -720881, 0, 0, -720810, 0, 0, -720809, 0, 0, -655360, 0, 0, -655345, 0, 0, -655274, 0, 0, -655273, 0, 0, -589824, 0, 0, -589809, 0, 0, -589738, 0, 0, -589737, 0, 0, -524288, 0, 0, -524273, 0, 0, -524202, 0, 0, -524201, 0, 0, -458752, 0, 0, -458737, 0, 0, -458666, 0, 0, -458665, 0, 0, -393216, 0, 0, -393201, 0, 0, -393130, 0, 0, -393129, 0, 0, -327680, 0, 0, -327665, 0, 0, -327594, 0, 0, -327593, 0, 0, -262144, 0, 0, -262129, 0, 0, -262058, 0, 0, -262057, 0, 0, -196608, 0, 0, -196593, 0, 0, -196522, 0, 0, -196521, 0, 0, -131072, 0, 0, -131057, 0, 0, -130986, 0, 0, -130985, 0, 0, -65536, 0, 0, -65521, 0, 0, -65450, 0, 0, -65449, 0, 0, 0, 0, 0, 15, 0, 0, 86, 0, 0, 87, 0, 0, 65536, 0, 0, 65551, 0, 0, 65622, 0, 0, 65623, 0, 0, 131072, 0, 0, 131087, 0, 0, 131158, 0, 0, 131159, 0, 0, 196608, 0, 0, 196623, 0, 0, 196694, 0, 0, 196695, 0, 0, 262144, 0, 0, 262159, 0, 0, 262230, 0, 0, 262231, 0, 0, 327680, 0, 0, 327695, 0, 0, 327766, 0, 0, 327767, 0, 0, 393216, 0, 0, 393231, 0, 0, 393302, 0, 0, 393303, 0, 0, 458752, 0, 0, 458767, 0, 0, 458838, 0, 0, 458839, 0, 0, 524288, 0, 0, 524303, 0, 0, 524374, 0, 0, 524375, 0, 0, 589824, 0, 0, 589839, 0, 0, 589910, 0, 0, 589911, 0, 0, 655360, 0, 0, 655375, 0, 0, 655446, 0, 0, 655447, 0, 0, 720896, 0, 0, 720911, 0, 0, 720982, 0, 0, 720983, 0, 0, 786432, 0, 0, 786447, 0, 0, 786518, 0, 0, 786519, 0, 0, 851968, 0, 0, 851983, 0, 0, 852054, 0, 0, 852055, 0, 0, 917504, 0, 0, 917519, 0, 0, 917590, 0, 0, 917591, 0, 0, 983040, 0, 0, 983055, 0, 0, 983126, 0, 0, 983127, 0, 0, 1048576, 0, 0, 1048591, 0, 0, 1048662, 0, 0, 1048663, 0, 0, 1114112, 0, 0, 1114127, 0, 0, 1114198, 0, 0, 1114199, 0, 0, 1179648, 0, 0, 1179663, 0, 0, 1179734, 0, 0, 1179735, 0, 0, 1245184, 0, 0, 1245199, 0, 0, 1245270, 0, 0, 1245271, 0, 0, 1310720, 0, 0, 1310735, 0, 0, 1310806, 0, 0, 1310807, 0, 0, 1376256, 0, 0, 1376271, 0, 0, 1376342, 0, 0, 1376343, 0, 0, 1441792, 0, 0, 1441807, 0, 0, 1441878, 0, 0, 1441879, 0, 0, 1507328, 0, 0, 1507343, 0, 0, 1507414, 0, 0, 1507415, 0, 0, 1572864, 0, 0, 1572879, 0, 0, 1572950, 0, 0, 1572951, 0, 0, 1638400, 0, 0, 1638415, 0, 0, 1638486, 0, 0, 1638487, 0, 0, 1703936, 0, 0, 1703951, 0, 0, 1704022, 0, 0, 1704023, 0, 0, 1769472, 0, 0, 1769487, 0, 0, 1769558, 0, 0, 1769559, 0, 0, 1835008, 0, 0, 1835023, 0, 0, 1835094, 0, 0, 1835095, 0, 0, 1900544, 0, 0, 1900559, 0, 0, 1900630, 0, 0, 1900631, 0, 0, 1966080, 0, 0, 1966095, 0, 0, 1966166, 0, 0, 1966167, 0, 0, 2031616, 0, 0, 2031631, 0, 0, 2031702, 0, 0, 2031703, 0, 0, 2097152, 0, 0, 2097167, 0, 0, 2097238, 0, 0, 2097239, 0, 0, 2162688, 0, 0, 2162703, 0, 0, 2162774, 0, 0, 2162775, 0, 0, 2228224, 0, 0, 2228239, 0, 0, 2228310, 0, 0, 2228311, 0, 0, 2293760, 0, 0, 2293775, 0, 0, 2293846, 0, 0, 2293847, 0, 0, 2359296, 0, 0, 2359311, 0, 0, 2359382, 0, 0, 2359383, 0, 0, 2424832, 0, 0, 2424847, 0, 0, 2424918, 0, 0, 2424919, 0, 0, 2490368, 0, 0, 2490383, 0, 0, 2490454, 0, 0, 2490455, 0, 0, 2555904, 0, 0, 2555919, 0, 0, 2555990, 0, 0, 2555991, 0, 0, 2621440, 0, 0, 2621455, 0, 0, 2621526, 0, 0, 2621527, 0, 0, 2686976, 0, 0, 2686991, 0, 0, 2687062, 0, 0, 2687063, 0, 0, 2752512, 0, 0, 2752527, 0, 0, 2752598, 0, 0, 2752599, 0, 0, 2818048, 0, 0, 2818063, 0, 0, 2818134, 0, 0, 2818135, 0, 0, 2883584, 0, 0, 2883599, 0, 0, 2883670, 0, 0, 2883671, 0, 0, 2949120, 0, 0, 2949135, 0, 0, 2949206, 0, 0, 2949207, 0, 0, 3014656, 0, 0, 3014671, 0, 0, 3014742, 0, 0, 3014743, 0, 0, 3080192, 0, 0, 3080207, 0, 0, 3080278, 0, 0, 3080279, 0, 0, 3145728, 0, 0, 3145743, 0, 0, 3145814, 0, 0, 3145815, 0, 0, 3211264, 0, 0, 3211279, 0, 0, 3211350, 0, 0, 3211351, 0, 0, 3276800, 0, 0, 3276815, 0, 0, 3276886, 0, 0, 3276887, 0, 0, 3342336, 0, 0, 3342351, 0, 0, 3342422, 0, 0, 3342423, 0, 0, 3407872, 0, 0, 3407887, 0, 0, 3407958, 0, 0, 3407959, 0, 0, 3473408, 0, 0, 3473423, 0, 0, 3473494, 0, 0, 3473495, 0, 0, 3538944, 0, 0, 3538959, 0, 0, 3539030, 0, 0, 3539031, 0, 0, 3604480, 0, 0, 3604495, 0, 0, 3604566, 0, 0, 3604567, 0, 0, 3670016, 0, 0, 3670031, 0, 0, 3670102, 0, 0, 3670103, 0, 0, 3735552, 0, 0, 3735567, 0, 0, 3735638, 0, 0, 3735639, 0, 0, 3801088, 0, 0, 3801103, 0, 0, 3801174, 0, 0, 3801175, 0, 0, 3866624, 0, 0, 3866639, 0, 0, 3866710, 0, 0, 3866711, 0, 0, 3932160, 0, 0, 3932175, 0, 0, 3932246, 0, 0, 3932247, 0, 0, 3997696, 0, 0, 3997711, 0, 0, 3997782, 0, 0, 3997783, 0, 0, 4063232, 0, 0, 4063247, 0, 0, 4063318, 0, 0, 4063319, 0, 0, 4128768, 0, 0, 4128783, 0, 0, 4128854, 0, 0, 4128855, 0, 0, 4194304, 0, 0, 4194319, 0, 0, 4194390, 0, 0, 4194391, 0, 0, 4259840, 0, 0, 4259855, 0, 0, 4259926, 0, 0, 4259927, 0, 0, 4325376, 0, 0, 4325391, 0, 0, 4325462, 0, 0, 4325463, 0, 0, 4390912, 0, 0, 4390927, 0, 0, 4390998, 0, 0, 4390999, 0, 0, 4456448, 0, 0, 4456463, 0, 0, 4456534, 0, 0, 4456535, 0, 0, 4521984, 0, 0, 4521999, 0, 0, 4522070, 0, 0, 4522071, 0, 0, 4587520, 0, 0, 4587535, 0, 0, 4587606, 0, 0, 4587607, 0, 0, 4653056, 0, 0, 4653071, 0, 0, 4653142, 0, 0, 4653143, 0, 0, 4718592, 0, 0, 4718607, 0, 0, 4718678, 0, 0, 4718679, 0, 0, 4784128, 0, 0, 4784143, 0, 0, 4784214, 0, 0, 4784215, 0, 0, 4849664, 0, 0, 4849679, 0, 0, 4849750, 0, 0, 4849751, 0, 0, 4915200, 0, 0, 4915215, 0, 0, 4915286, 0, 0, 4915287, 0, 0, 4980736, 0, 0, 4980751, 0, 0, 4980822, 0, 0, 4980823, 0, 0, 5046272, 0, 0, 5046287, 0, 0, 5046358, 0, 0, 5046359, 0, 0, 5111808, 0, 0, 5111823, 0, 0, 5111894, 0, 0, 5111895, 0, 0, 5177344, 0, 0, 5177359, 0, 0, 5177430, 0, 0, 5177431, 0, 0, 5242880, 0, 0, 5242895, 0, 0, 5242966, 0, 0, 5242967, 0, 0, 5308416, 0, 0, 5308431, 0, 0, 5308502, 0, 0, 5308503, 0, 0, 5373952, 0, 0, 5373967, 0, 0, 5374038, 0, 0, 5374039, 0, 0, 5439488, 0, 0, 5439503, 0, 0, 5439574, 0, 0, 5439575, 0, 0, 5505024, 0, 0, 5505039, 0, 0, 5505110, 0, 0, 5505111, 0, 0, 5570560, 0, 0, 5570575, 0, 0, 5570646, 0, 0, 5570647, 0, 0, 5636096, 0, 0, 5636111, 0, 0, 5636182, 0, 0, 5636183, 0, 0, 5701632, 0, 0, 5701647, 0, 0, 5701718, 0, 0, 5701719, 0, 0, 5767168, 0, 0, 5767183, 0, 0, 5767254, 0, 0, 5767255, 0, 0, 5832704, 0, 0, 5832719, 0, 0, 5832790, 0, 0, 5832791, 0, 0, 5898240, 0, 0, 5898255, 0, 0, 5898326, 0, 0, 5898327, 0, 0, 5963776, 0, 0, 5963791, 0, 0, 5963862, 0, 0, 5963863, 0, 0, 6029312, 0, 0, 6029327, 0, 0, 6029398, 0, 0, 6029399, 0, 0, 6094848, 0, 0, 6094863, 0, 0, 6094934, 0, 0, 6094935, 0, 0, 6160384, 0, 0, 6160399, 0, 0, 6160470, 0, 0, 6160471, 0, 0, 6225920, 0, 0, 6225935, 0, 0, 6226006, 0, 0, 6226007, 0, 0, 6291456, 0, 0, 6291471, 0, 0, 6291542, 0, 0, 6291543, 0, 0, 6356992, 0, 0, 6357007, 0, 0, 6357078, 0, 0, 6357079, 0, 0, 6422528, 0, 0, 6422543, 0, 0, 6422614, 0, 0, 6422615, 0, 0, 6488064, 0, 0, 6488079, 0, 0, 6488150, 0, 0, 6488151, 0, 0, 6553600, 0, 0, 6553615, 0, 0, 6553686, 0, 0, 6553687, 0, 0, 6619136, 0, 0, 6619151, 0, 0, 6619222, 0, 0, 6619223, 0, 0, 6684672, 0, 0, 6684687, 0, 0, 6684758, 0, 0, 6684759, 0, 0, 6750208, 0, 0, 6750223, 0, 0, 6750294, 0, 0, 6750295, 0, 0, 6815744, 0, 0, 6815759, 0, 0, 6815830, 0, 0, 6815831, 0, 0, 6881280, 0, 0, 6881295, 0, 0, 6881366, 0, 0, 6881367, 0, 0, 6946816, 0, 0, 6946831, 0, 0, 6946902, 0, 0, 6946903, 0, 0, 7012352, 0, 0, 7012367, 0, 0, 7012438, 0, 0, 7012439, 0, 0, 7077888, 0, 0, 7077903, 0, 0, 7077974, 0, 0, 7077975, 0, 0, 7143424, 0, 0, 7143439, 0, 0, 7143510, 0, 0, 7143511, 0, 0, 7208960, 0, 0, 7208975, 0, 0, 7209046, 0, 0, 7209047, 0, 0, 7274496, 0, 0, 7274511, 0, 0, 7274582, 0, 0, 7274583, 0, 0, 7340032, 0, 0, 7340047, 0, 0, 7340118, 0, 0, 7340119, 0, 0, 7405568, 0, 0, 7405583, 0, 0, 7405654, 0, 0, 7405655, 0, 0, 7471104, 0, 0, 7471119, 0, 0, 7471190, 0, 0, 7471191, 0, 0, 7536640, 0, 0, 7536655, 0, 0, 7536726, 0, 0, 7536727, 0, 0, 7602176, 0, 0, 7602191, 0, 0, 7602262, 0, 0, 7602263, 0, 0, 7667712, 0, 0, 7667727, 0, 0, 7667798, 0, 0, 7667799, 0, 0, 7733248, 0, 0, 7733263, 0, 0, 7733334, 0, 0, 7733335, 0, 0, 7798784, 0, 0, 7798799, 0, 0, 7798870, 0, 0, 7798871, 0, 0, 7864320, 0, 0, 7864335, 0, 0, 7864406, 0, 0, 7864407, 0, 0, 7929856, 0, 0, 7929871, 0, 0, 7929942, 0, 0, 7929943, 0, 0, 7995392, 0, 0, 7995407, 0, 0, 7995478, 0, 0, 7995479, 0, 0, 8060928, 0, 0, 8060943, 0, 0, 8061014, 0, 0, 8061015, 0, 0, 8126464, 0, 0, 8126479, 0, 0, 8126550, 0, 0, 8126551, 0, 0, 8192000, 0, 0, 8192015, 0, 0, 8192086, 0, 0, 8192087, 0, 0, 8257536, 0, 0, 8257551, 0, 0, 8257622, 0, 0, 8257623, 0, 0, 8323072, 0, 0, 8323087, 0, 0, 8323158, 0, 0, 8323159, 0, 0, 8388608, 0, 0, 8388623, 0, 0, 8388694, 0, 0, 8388695, 0, 0, 8454144, 0, 0, 8454159, 0, 0, 8454230, 0, 0, 8454231, 0, 0, 8519680, 0, 0, 8519695, 0, 0, 8519766, 0, 0, 8519767, 0, 0, 8585216, 0, 0, 8585231, 0, 0, 8585302, 0, 0, 8585303, 0, 0, 8650752, 0, 0, 8650767, 0, 0, 8650838, 0, 0, 8650839, 0, 0, 8716288, 0, 0, 8716303, 0, 0, 8716374, 0, 0, 8716375, 0, 0, 8781824, 0, 0, 8781839, 0, 0, 8781910, 0, 0, 8781911, 0, 0, 8847360, 0, 0, 8847375, 0, 0, 8847446, 0, 0, 8847447, 0, 0, 8912896, 0, 0, 8912911, 0, 0, 8912982, 0, 0, 8912983, 0, 0, 8978432, 0, 0, 8978447, 0, 0, 8978518, 0, 0, 8978519, 0, 0, 9043968, 0, 0, 9043983, 0, 0, 9044054, 0, 0, 9044055, 0, 0, 9109504, 0, 0, 9109519, 0, 0, 9109590, 0, 0, 9109591, 0, 0, 9175040, 0, 0, 9175055, 0, 0, 9175126, 0, 0, 9175127, 0, 0, 9240576, 0, 0, 9240591, 0, 0, 9240662, 0, 0, 9240663, 0, 0, 9306112, 0, 0, 9306127, 0, 0, 9306198, 0, 0, 9306199, 0, 0, 9371648, 0, 0, 9371663, 0, 0, 9371734, 0, 0, 9371735, 0, 0, 9437184, 0, 0, 9437199, 0, 0, 9437270, 0, 0, 9437271, 0, 0, 9502720, 0, 0, 9502735, 0, 0, 9502806, 0, 0, 9502807, 0, 0, 9568256, 0, 0, 9568271, 0, 0, 9568342, 0, 0, 9568343, 0, 0, 9633792, 0, 0, 9633807, 0, 0, 9633878, 0, 0, 9633879, 0, 0, 9699328, 0, 0, 9699343, 0, 0, 9699414, 0, 0, 9699415, 0, 0, 9764864, 0, 0, 9764879, 0, 0, 9764950, 0, 0, 9764951, 0, 0, 9830400, 0, 0, 9830415, 0, 0, 9830486, 0, 0, 9830487, 0, 0, 9895936, 0, 0, 9895951, 0, 0, 9896022, 0, 0, 9896023, 0, 0, 9961472, 0, 0, 9961487, 0, 0, 9961558, 0, 0, 9961559, 0, 0, 10027008, 0, 0, 10027023, 0, 0, 10027094, 0, 0, 10027095, 0, 0, 10092544, 0, 0, 10092559, 0, 0, 10092630, 0, 0, 10092631, 0, 0, 10158080, 0, 0, 10158095, 0, 0, 10158166, 0, 0, 10158167, 0, 0, 10223616, 0, 0, 10223631, 0, 0, 10223702, 0, 0, 10223703, 0, 0, 10289152, 0, 0, 10289167, 0, 0, 10289238, 0, 0, 10289239, 0, 0, 10354688, 0, 0, 10354703, 0, 0, 10354774, 0, 0, 10354775, 0, 0, 10420224, 0, 0, 10420239, 0, 0, 10420310, 0, 0, 10420311, 0, 0, 10485760, 0, 0, 10485775, 0, 0, 10485846, 0, 0, 10485847, 0, 0, 10551296, 0, 0, 10551311, 0, 0, 10551382, 0, 0, 10551383, 0, 0, 10616832, 0, 0, 10616847, 0, 0, 10616918, 0, 0, 10616919, 0, 0, 10682368, 0, 0, 10682383, 0, 0, 10682454, 0, 0, 10682455, 0, 0, 10747904, 0, 0, 10747919, 0, 0, 10747990, 0, 0, 10747991, 0, 0, 10813440, 0, 0, 10813455, 0, 0, 10813526, 0, 0, 10813527, 0, 0, 10878976, 0, 0, 10878991, 0, 0, 10879062, 0, 0, 10879063, 0, 0, 10944512, 0, 0, 10944527, 0, 0, 10944598, 0, 0, 10944599, 0, 0, 11010048, 0, 0, 11010063, 0, 0, 11010134, 0, 0, 11010135, 0, 0, 11075584, 0, 0, 11075599, 0, 0, 11075670, 0, 0, 11075671, 0, 0, 11141120, 0, 0, 11141135, 0, 0, 11141206, 0, 0, 11141207, 0, 0, 11206656, 0, 0, 11206671, 0, 0, 11206742, 0, 0, 11206743, 0, 0, 11272192, 0, 0, 11272207, 0, 0, 11272278, 0, 0, 11272279, 0, 0, 11337728, 0, 0, 11337743, 0, 0, 11337814, 0, 0, 11337815, 0, 0, 11403264, 0, 0, 11403279, 0, 0, 11403350, 0, 0, 11403351, 0, 0, 11468800, 0, 0, 11468815, 0, 0, 11468886, 0, 0, 11468887, 0, 0, 11534336, 0, 0, 11534351, 0, 0, 11534422, 0, 0, 11534423, 0, 0, 11599872, 0, 0, 11599887, 0, 0, 11599958, 0, 0, 11599959, 0, 0, 11665408, 0, 0, 11665423, 0, 0, 11665494, 0, 0, 11665495, 0, 0, 11730944, 0, 0, 11730959, 0, 0, 11731030, 0, 0, 11731031, 0, 0, 11796480, 0, 0, 11796495, 0, 0, 11796566, 0, 0, 11796567, 0, 0, 11862016, 0, 0, 11862031, 0, 0, 11862102, 0, 0, 11862103, 0, 0, 11927552, 0, 0, 11927567, 0, 0, 11927638, 0, 0, 11927639, 0, 0, 11993088, 0, 0, 11993103, 0, 0, 11993174, 0, 0, 11993175, 0, 0, 12058624, 0, 0, 12058639, 0, 0, 12058710, 0, 0, 12058711, 0, 0, 12124160, 0, 0, 12124175, 0, 0, 12124246, 0, 0, 12124247, 0, 0, 12189696, 0, 0, 12189711, 0, 0, 12189782, 0, 0, 12189783, 0, 0, 12255232, 0, 0, 12255247, 0, 0, 12255318, 0, 0, 12255319, 0, 0, 12320768, 0, 0, 12320783, 0, 0, 12320854, 0, 0, 12320855, 0, 0, 12386304, 0, 0, 12386319, 0, 0, 12386390, 0, 0, 12386391, 0, 0, 12451840, 0, 0, 12451855, 0, 0, 12451926, 0, 0, 12451927, 0, 0, 12517376, 0, 0, 12517391, 0, 0, 12517462, 0, 0, 12517463, 0, 0, 12582912, 0, 0, 12582927, 0, 0, 12582998, 0, 0, 12582999, 0, 0, 12648448, 0, 0, 12648463, 0, 0, 12648534, 0, 0, 12648535, 0, 0, 12713984, 0, 0, 12713999, 0, 0, 12714070, 0, 0, 12714071, 0, 0, 12779520, 0, 0, 12779535, 0, 0, 12779606, 0, 0, 12779607, 0, 0, 12845056, 0, 0, 12845071, 0, 0, 12845142, 0, 0, 12845143, 0, 0, 12910592, 0, 0, 12910607, 0, 0, 12910678, 0, 0, 12910679, 0, 0, 12976128, 0, 0, 12976143, 0, 0, 12976214, 0, 0, 12976215, 0, 0, 13041664, 0, 0, 13041679, 0, 0, 13041750, 0, 0, 13041751, 0, 0, 13107200, 0, 0, 13107215, 0, 0, 13107286, 0, 0, 13107287, 0, 0, 13172736, 0, 0, 13172751, 0, 0, 13172822, 0, 0, 13172823, 0, 0, 13238272, 0, 0, 13238358, 0, 0, 13238359, 0, 0, 13303808, 0, 0, 13303894, 0, 0, 13303895, 0, 0, 13369344, 0, 0, 13369430, 0, 0, 13369431, 0, 0, 13434880, 0, 0, 13434966, 0, 0, 13434967, 0, 0, 13500416, 0, 0, 13500502, 0, 0, 13500503, 0, 0, 13565952, 0, 0, 13566038, 0, 0, 13566039, 0, 0, 13631488, 0, 0, 13631574, 0, 0, 13631575, 0, 0, 13697024, 0, 0, 13697110, 0, 0, 13697111, 0, 0, 13762560, 0, 0, 13762646, 0, 0, 13762647, 0, 0, 13828096, 0, 0, 13828182, 0, 0, 13828183, 0, 0, 13893632, 0, 0, 13893718, 0, 0, 13893719, 0, 0, 13959168, 0, 0, 13959254, 0, 0, 13959255, 0, 0, 14024704, 0, 0, 14024790, 0, 0, 14024791, 0, 0, 14090240, 0, 0, 14090326, 0, 0, 14090327, 0, 0, 14155776, 0, 0, 14155862, 0, 0, 14155863, 0, 0, 14221312, 0, 0, 14221398, 0, 0, 14221399, 0, 0, 14286848, 0, 0, 14286934, 0, 0, 14286935, 0, 0, 14352384, 0, 0, 14352470, 0, 0, 14352471, 0, 0, 14417920, 0, 0, 14418006, 0, 0, 14418007, 0, 0, 14483456, 0, 0, 14483542, 0, 0, 14483543, 0, 0, 14548992, 0, 0, 14549078, 0, 0, 14549079, 0, 0, 14614528, 0, 0, 14614614, 0, 0, 14614615, 0, 0, 14680064, 0, 0, 14680150, 0, 0, 14680151, 0, 0, 14745600, 0, 0, 14745686, 0, 0, 14745687, 0, 0, 14811136, 0, 0, 14811222, 0, 0, 14811223, 0, 0, 14876672, 0, 0, 14876758, 0, 0, 14876759, 0, 0, 14942208, 0, 0, 14942294, 0, 0, 14942295, 0, 0, 15007744, 0, 0, 15007830, 0, 0, 15007831, 0, 0, 15073280, 0, 0, 15073366, 0, 0, 15073367, 0, 0, 15138816, 0, 0, 15138902, 0, 0, 15138903, 0, 0, 15204352, 0, 0, 15204438, 0, 0, 15204439, 0, 0, 15269888, 0, 0, 15269974, 0, 0, 15269975, 0, 0, 15335424, 0, 0, 15335510, 0, 0, 15335511, 0, 0, 15400960, 0, 0, 15401046, 0, 0, 15401047, 0, 0, 15466496, 0, 0, 15466582, 0, 0, 15466583, 0, 0, 15532032, 0, 0, 15532118, 0, 0, 15532119, 0, 0, 15597568, 0, 0, 15597654, 0, 0, 15597655, 0, 0, 15663104, 0, 0, 15663190, 0, 0, 15663191, 0, 0, 15728640, 0, 0, 15728726, 0, 0, 15728727, 0, 0, 15794176, 0, 0, 15794262, 0, 0, 15794263, 0, 0, 15859712, 0, 0, 15859798, 0, 0, 15859799, 0, 0, 15925248, 0, 0, 15925334, 0, 0, 15925335, 0, 0, 15990784, 0, 0, 15990870, 0, 0, 15990871, 0, 0, 16056320, 0, 0, 16056406, 0, 0, 16056407, 0, 0, 16121856, 0, 0, 16121942, 0, 0, 16121943, 0, 0, 16187392, 0, 0, 16187478, 0, 0, 16187479, 0, 0, 16252928, 0, 0, 16253014, 0, 0, 16253015, 0, 0, 16318464, 0, 0, 16318550, 0, 0, 16318551, 0, 0, 16384000, 0, 0, 16384086, 0, 0, 16384087, 0, 0, 16449536, 0, 0, 16449622, 0, 0, 16449623, 0, 0, 16515072, 0, 0, 16515158, 0, 0, 16515159, 0, 0, 16580608, 0, 0, 16580694, 0, 0, 16580695, 0, 0, 16646144, 0, 0, 16646230, 0, 0, 16646231, 0, 0, 16711680, 0, 0, 16711766, 0, 0, 16711767, 0, 0, 16777216, 0, 0, 16777302, 0, 0, 16777303, 0, 0, 16842752, 0, 0, 16842838, 0, 0, 16842839, 0, 0, 16908288, 0, 0, 16908374, 0, 0, 16908375, 0, 0, 16973824, 0, 0, 16973910, 0, 0, 16973911, 0, 0, 17039360, 0, 0, 17039446, 0, 0, 17039447, 0, 0, 17104896, 0, 0, 17104982, 0, 0, 17104983, 0, 0, 17170432, 0, 0, 17170518, 0, 0, 17170519, 0, 0, 17235968, 0, 0, 17236054, 0, 0, 17236055, 0, 0, 17301504, 0, 0, 17301590, 0, 0, 17301591, 0, 0, 17367040, 0, 0, 17367126, 0, 0, 17367127, 0, 0, 17432576, 0, 0, 17432662, 0, 0, 17432663, 0, 0, 17498112, 0, 0, 17498198, 0, 0, 17498199, 0, 0, 17563648, 0, 0, 17563734, 0, 0, 17563735, 0, 0, 17629184, 0, 0, 17629270, 0, 0, 17629271, 0, 0, 17694720, 0, 0, 17694806, 0, 0, 17694807, 0, 0, 17760256, 0, 0, 17760342, 0, 0, 17760343, 0, 0, 17825792, 0, 0, 17825878, 0, 0, 17825879, 0, 0, 17891328, 0, 0, 17891414, 0, 0, 17891415, 0, 0, 17956864, 0, 0, 17956950, 0, 0, 17956951, 0, 0, 18022400, 0, 0, 18022486, 0, 0, 18022487, 0, 0, 18087936, 0, 0, 18088022, 0, 0, 18088023, 0, 0, 18153472, 0, 0, 18153558, 0, 0, 18153559, 0, 0, 18219008, 0, 0, 18219094, 0, 0, 18219095, 0, 0, 18284544, 0, 0, 18284630, 0, 0, 18284631, 0, 0, 18350080, 0, 0, 18350166, 0, 0, 18350167, 0, 0, 18415616, 0, 0, 18415702, 0, 0, 18415703, 0, 0, 18481152, 0, 0, 18481238, 0, 0, 18481239, 0, 0, 18546688, 0, 0, 18546774, 0, 0, 18546775, 0, 0, 18612224, 0, 0, 18612310, 0, 0, 18612311, 0, 0, 18677760, 0, 0, 18677846, 0, 0, 18677847, 0, 0, 18743296, 0, 0, 18743382, 0, 0, 18743383, 0, 0, 18808832, 0, 0, 18808918, 0, 0, 18808919, 0, 0, 18874368, 0, 0, 18874454, 0, 0, 18874455, 0, 0, 18939904, 0, 0, 18939990, 0, 0, 18939991, 0, 0, 19005440, 0, 0, 19005526, 0, 0, 19005527, 0, 0, 19070976, 0, 0, 19071062, 0, 0, 19071063, 0, 0, 19136512, 0, 0, 19136598, 0, 0, 19136599, 0, 0, 19202048, 0, 0, 19202134, 0, 0, 19202135, 0, 0, 19267584, 0, 0, 19267670, 0, 0, 19267671, 0, 0, 19333120, 0, 0, 19333206, 0, 0, 19333207, 0, 0, 19398656, 0, 0, 19398742, 0, 0, 19398743, 0, 0, 19464192, 0, 0, 19464278, 0, 0, 19464279, 0, 0, 19529728, 0, 0, 19529814, 0, 0, 19529815, 0, 0, 19595264, 0, 0, 19595350, 0, 0, 19595351, 0, 0, 19660800, 0, 0, 19660886, 0, 0, 19660887, 0, 0, 19726336, 0, 0, 19726422, 0, 0, 19726423, 0, 0, 19791872, 0, 0, 19791958, 0, 0, 19791959, 0, 0, 19857408, 0, 0, 19857494, 0, 0, 19857495, 0, 0, 19922944, 0, 0, 19923030, 0, 0, 19923031, 0, 0, 19988480, 0, 0, 19988566, 0, 0, 19988567, 0, 0, 20054016, 0, 0, 20054102, 0, 0, 20054103, 0, 0, 20119552, 0, 0, 20119638, 0, 0, 20119639, 0, 0, 20185088, 0, 0, 20185174, 0, 0, 20185175, 0, 0, 20250624, 0, 0, 20250710, 0, 0, 20250711, 0, 0, 20316160, 0, 0, 20316246, 0, 0, 20316247, 0, 0, 20381696, 0, 0, 20381782, 0, 0, 20381783, 0, 0, 20447232, 0, 0, 20447318, 0, 0, 20447319, 0, 0, 20512768, 0, 0, 20512854, 0, 0, 20512855, 0, 0, 20578304, 0, 0, 20578390, 0, 0, 20578391, 0, 0, 20643840, 0, 0, 20643926, 0, 0, 20643927, 0, 0, 20709376, 0, 0, 20709462, 0, 0, 20709463, 0, 0, 20774912, 0, 0, 20774998, 0, 0, 20774999, 0, 0, 20840448, 0, 0, 20840534, 0, 0, 20840535, 0, 0, 20905984, 0, 0, 20906070, 0, 0, 20906071, 0, 0, 20971520, 0, 0, 20971606, 0, 0, 20971607, 0, 0, 21037056, 0, 0, 21037143, 0, 0, 21102592, 0, 0, 21168128, 0, 0, 21233664, 0, 0, 21299200, 0, 0, 21364736, 0, 0, 21430272, 0, 0, 21495808, 0, 0, 21561344, 0, 0, 21626880, 0, 0, 21692416, 0, 0, 21757952, 0, 0, 21823488, 0, 0, 21889024, 0, 0, 21954560, 0, 0, 22020096, 0, 0, 22085632, 0, 0, 22151168, 0, 0, 22216704, 0, 0, 22282240, 0, 0, 22347776, 0, 0, 22413312, 0, 0, 22478848, 0, 0, 22544384, 0, 0, 22609920, 0, 0, 22675456, 0, 0, 22740992, 0, 0, 22806528, 0, 0, 22872064, 0, 0, 22937600, 0, 0, 23003136, 0, 0, 23068672, 0, 0, 23134208, 0, 0, 23199744, 0, 0, 23265280, 0, 0, 23330816, 0, 0, 23396352, 0, 0, 23461888, 0, 0, 23527424, 0, 0, 23592960, 0, 0, 23658496, 0, 0, 23724032, 0, 0, 23789568, 0, 0, 23855104, 0, 0, 23920640, 0, 0, 23986176, 0, 0, 24051712, 0, 0, 24117248, 0, 0, 24182784, 0, 0, 24248320, 0, 0, 24313856, 0, 0, 24379392, 0, 0, 24444928, 0, 0, 24510464, 0, 0, 24576000, 0, 0, 24641536, 0, 0, 24707072, 0, 0, 24772608, 0, 0, 24838144, 0, 0, 24903680, 0, 0, 24969216, 0, 0, 25034752, 0, 0, 25100288, 0, 0, 25165824, 0, 0, 25231360, 0, 0, 25296896, 0, 0, 25362432, 0, 0, 25427968, 0, 0, 25493504, 0, 0, 25559040, 0, 0, 25624576, 0, 0, 25690112, 0, 0, 25755648, 0, 0, 25821184, 0, 0, 25886720, 0, 0, 25952256, 0, 0, 26017792, 0, 0, 26083328, 0, 0, 26148864, 0, 0, 26214400, 0, 0, 26279936, 0, 0, 26345472, 0, 0, 26411008, 0, 0, 26476544, 0, 0, 26542080, 0, 0, 26607616, 0, 0, 26673152, 0, 0, 26738688, 0, 0, 26804224, 0, 0, 26869760, 0, 0, 26935296, 0, 0, 27000832, 0, 0, 27066368, 0, 0, 27131904, 0, 0, 27197440, 0, 0, 27262976, 0, 0, 27328512, 0, 0, 27394048, 0, 0, 27459584, 0, 0, 27525120, 0, 0, 27590656, 0, 0, 27656192, 0, 0, 27721728, 0, 0, 27787264, 0, 0, 27852800, 0, 0, 27918336, 0, 0, 27983872, 0, 0, 28049408, 0, 0, 28114944, 0, 0, 28180480, 0, 0, 28246016, 0, 0, 28311552, 0, 0, 28377088, 0, 0, 28442624, 0, 0, 28508160, 0, 0, 28573696, 0, 0, 28639232, 0, 0, 28704768, 0, 0, 28770304, 0, 0, 28835840, 0, 0, 28901376, 0, 0, 28966912, 0, 0, 29032448, 0, 0, 29097984, 0, 0, 29163520, 0, 0, 29229056, 0, 0, 29294592, 0, 0 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "Fall"
anims/Fall = SubResource( 2 )
anims/RESET = SubResource( 3 )

[node name="Particles2D" type="CPUParticles2D" parent="."]
modulate = Color( 0.905882, 0.705882, 0.423529, 0.372549 )
position = Vector2( 351, 334 )
scale = Vector2( 5.469, 5.469 )
amount = 20
emission_shape = 2
emission_rect_extents = Vector2( 30, 50 )
gravity = Vector2( 0, 4 )
color_ramp = SubResource( 35 )

[node name="LightBeamStraight" type="Sprite" parent="."]
modulate = Color( 1, 1, 1, 0.356863 )
position = Vector2( 375, 349 )
scale = Vector2( 5.469, 5.469 )
texture = ExtResource( 3 )

[node name="ColorRect2" type="ColorRect" parent="."]
margin_right = 726.0
margin_bottom = 729.0
color = Color( 0, 0, 0, 0 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CRTScreenShader" type="ColorRect" parent="."]
material = SubResource( 34 )
margin_left = -2.0
margin_top = -8.0
margin_right = 706.0
margin_bottom = 701.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
